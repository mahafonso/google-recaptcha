{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcela Afonso\\\\Desktop\\\\Marcela\\\\dev\\\\github_projects\\\\google-recaptcha\\\\components\\\\google-recaptcha.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { Component } from 'react';\nimport './googeRecaptcha.scss';\n;\n\nclass GoogleRecaptcha extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"loadRecaptcha\", () => {\n      console.log('loadRecaptcha');\n      console.log('props xxx', this.props);\n      window.grecaptcha.render('form-recaptcha', {\n        'sitekey': '6LcH0-wUAAAAAK1AC3awIRgj4GBuIU03THxGywfJ',\n        'callback': this.getRecaptcha\n      });\n    });\n\n    _defineProperty(this, \"getRecaptcha\", () => {\n      console.log('render callback');\n      console.log('props', this.props);\n      this.props.showButton;\n    });\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.loadRecaptcha();\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, __jsx(\"script\", {\n      src: \"https://www.google.com/recaptcha/api.js?render=explicit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      id: \"form-recaptcha\",\n      className: \"g-recaptcha\",\n      \"data-sitekey\": \"6LcH0-wUAAAAAK1AC3awIRgj4GBuIU03THxGywfJ\",\n      \"data-callback\": \"formSubmit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default GoogleRecaptcha;","map":{"version":3,"sources":["C:/Users/Marcela Afonso/Desktop/Marcela/dev/github_projects/google-recaptcha/components/google-recaptcha.tsx"],"names":["Head","Component","GoogleRecaptcha","constructor","props","console","log","window","grecaptcha","render","getRecaptcha","showButton","componentDidMount","loadRecaptcha"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAO,uBAAP;AAIC;;AAED,MAAMC,eAAN,SAA8BD,SAA9B,CAA+C;AAC3CE,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,2CAIV,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAD,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKF,KAA9B;AAECG,MAAAA,MAAD,CAAgBC,UAAhB,CAA2BC,MAA3B,CAAkC,gBAAlC,EAAoD;AAChD,mBAAW,0CADqC;AAEhD,oBAAY,KAAKC;AAF+B,OAApD;AAIH,KAbyB;;AAAA,0CAeX,MAAM;AACjBL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKF,KAA1B;AAEA,WAAKA,KAAL,CAAWO,UAAX;AACH,KApByB;AAEzB;;AAoBDC,EAAAA,iBAAiB,GAAG;AAChBP,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,SAAKO,aAAL;AACH;;AAEDJ,EAAAA,MAAM,GAAG;AAEL,WACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAC,yDAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,MAAA,SAAS,EAAC,aAAnC;AAAiD,sBAAa,0CAA9D;AAAyG,uBAAc,YAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AAxC0C;;AA2C/C,eAAeP,eAAf","sourcesContent":["import Head from 'next/head';\r\nimport { Component } from 'react';\r\n\r\nimport './googeRecaptcha.scss';\r\n\r\ninterface Props {\r\n    showButton: any\r\n};\r\n\r\nclass GoogleRecaptcha extends Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    loadRecaptcha = () => {\r\n        console.log('loadRecaptcha');\r\n\r\n        console.log('props xxx', this.props);\r\n\r\n        (window as any).grecaptcha.render('form-recaptcha', {\r\n            'sitekey': '6LcH0-wUAAAAAK1AC3awIRgj4GBuIU03THxGywfJ',\r\n            'callback': this.getRecaptcha\r\n        });\r\n    }\r\n\r\n    getRecaptcha = () => {\r\n        console.log('render callback');\r\n        console.log('props', this.props);\r\n\r\n        this.props.showButton;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n\r\n        this.loadRecaptcha();\r\n    }\r\n   \r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Head>\r\n                    <script src=\"https://www.google.com/recaptcha/api.js?render=explicit\"></script>\r\n                </Head>\r\n        \r\n                <div id=\"form-recaptcha\" className=\"g-recaptcha\" data-sitekey=\"6LcH0-wUAAAAAK1AC3awIRgj4GBuIU03THxGywfJ\" data-callback=\"formSubmit\" />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleRecaptcha"]},"metadata":{},"sourceType":"module"}