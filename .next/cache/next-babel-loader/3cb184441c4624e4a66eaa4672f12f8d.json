{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcela Afonso\\\\Desktop\\\\Marcela\\\\dev\\\\github_projects\\\\google-recaptcha\\\\components\\\\google-recaptcha.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { Component } from 'react'; // const GoogleRecaptcha = () => (\n//     <>\n//         <Head>\n//             <script src=\"https://www.google.com/recaptcha/api.js?onload=loadRecaptcha&render=explicit\"></script>\n//         </Head>\n//         <div className=\"recaptcha__element\">\n//             Recaptcha goes here!\n//             <div className=\"g-recaptcha\" data-sitekey=\"XXXXXX\" data-size=\"invisible\" data-callback=\"formSubmit\"></div>\n//         </div>\n//     </>\n// )\n// GoogleRecaptcha.loadRecaptcha = () => {\n//     console.log('loadRecaptcha');\n// }\n// GoogleRecaptcha.getRecaptcha = () => {\n//     console.log('getRecaptcha');\n// }\n// export default GoogleRecaptcha\n\nvar GoogleRecaptcha = /*#__PURE__*/function (_Component) {\n  _inherits(GoogleRecaptcha, _Component);\n\n  var _super = _createSuper(GoogleRecaptcha);\n\n  function GoogleRecaptcha() {\n    var _this;\n\n    _classCallCheck(this, GoogleRecaptcha);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"loadRecaptcha\", function () {\n      console.log('loadRecaptcha');\n    });\n\n    return _this;\n  }\n\n  _createClass(GoogleRecaptcha, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('componentDidMount');\n\n      if (window) {\n        grecaptcha.render('form-recaptcha', {\n          'sitekey': '6LcNbewUAAAAAE1ADOg8wI5cPgEGtoM-inyfym4x',\n          'callback': function callback() {\n            return null;\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, __jsx(\"script\", {\n        src: \"https://www.google.com/recaptcha/api.js?render=explicit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: \"recaptcha__element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, \"Recaptcha goes here!\", __jsx(\"div\", {\n        id: \"form-recaptcha\",\n        className: \"g-recaptcha\",\n        \"data-sitekey\": \"6LcNbewUAAAAAE1ADOg8wI5cPgEGtoM-inyfym4x\",\n        \"data-size\": \"invisible\",\n        \"data-callback\": \"formSubmit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return GoogleRecaptcha;\n}(Component);\n\nexport default GoogleRecaptcha;","map":{"version":3,"sources":["C:/Users/Marcela Afonso/Desktop/Marcela/dev/github_projects/google-recaptcha/components/google-recaptcha.js"],"names":["Head","Component","GoogleRecaptcha","console","log","window","grecaptcha","render"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;IAGMC,e;;;;;;;;;;;;;;;;oEACc,YAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,K;;;;;;;wCAEmB;AAChBD,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AAEA,UAAIC,MAAJ,EAAY;AACRC,QAAAA,UAAU,CAACC,MAAX,CAAkB,gBAAlB,EAAoC;AAChC,qBAAW,0CADqB;AAEhC,sBAAY;AAAA,mBAAM,IAAN;AAAA;AAFoB,SAApC;AAIH;AACJ;;;6BAEQ;AAEL,aACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,GAAG,EAAC,yDAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAGI;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAyB,QAAA,SAAS,EAAC,aAAnC;AAAiD,wBAAa,0CAA9D;AAAyG,qBAAU,WAAnH;AAA+H,yBAAc,YAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CALJ,CADJ;AAaH;;;;EA/ByBN,S;;AAkC9B,eAAeC,eAAf","sourcesContent":["import Head from 'next/head';\r\nimport { Component } from 'react';\r\n\r\n// const GoogleRecaptcha = () => (\r\n//     <>\r\n//         <Head>\r\n//             <script src=\"https://www.google.com/recaptcha/api.js?onload=loadRecaptcha&render=explicit\"></script>\r\n//         </Head>\r\n\r\n//         <div className=\"recaptcha__element\">\r\n//             Recaptcha goes here!\r\n\r\n//             <div className=\"g-recaptcha\" data-sitekey=\"XXXXXX\" data-size=\"invisible\" data-callback=\"formSubmit\"></div>\r\n//         </div>\r\n//     </>\r\n// )\r\n\r\n// GoogleRecaptcha.loadRecaptcha = () => {\r\n//     console.log('loadRecaptcha');\r\n// }\r\n\r\n// GoogleRecaptcha.getRecaptcha = () => {\r\n//     console.log('getRecaptcha');\r\n// }\r\n\r\n// export default GoogleRecaptcha\r\n\r\n\r\nclass GoogleRecaptcha extends Component {\r\n    loadRecaptcha = () => {\r\n        console.log('loadRecaptcha');\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n\r\n        if (window) {\r\n            grecaptcha.render('form-recaptcha', {\r\n                'sitekey': '6LcNbewUAAAAAE1ADOg8wI5cPgEGtoM-inyfym4x',\r\n                'callback': () => null\r\n            });\r\n        }\r\n    }\r\n   \r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Head>\r\n                    <script src=\"https://www.google.com/recaptcha/api.js?render=explicit\"></script>\r\n                </Head>\r\n        \r\n                <div className=\"recaptcha__element\">\r\n                    Recaptcha goes here!\r\n        \r\n                    <div id=\"form-recaptcha\" className=\"g-recaptcha\" data-sitekey=\"6LcNbewUAAAAAE1ADOg8wI5cPgEGtoM-inyfym4x\" data-size=\"invisible\" data-callback=\"formSubmit\"></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleRecaptcha"]},"metadata":{},"sourceType":"module"}